# ====================================================================================
#  Backstage frontend configuration
# ====================================================================================
app:
  title: NEORIS monitor
  baseUrl: ${BACKSTAGE_BASE_URL} # https://backstage.aws.neoris.cloud
organization:
  name: NEORIS
# ====================================================================================
#  Backstage backend configuration
# ====================================================================================
backend:
  baseUrl: ${BACKSTAGE_BASE_URL} # https://backstage.aws.neoris.cloud
  listen:
    port: 7007
  cors:
    origin: ${BACKSTAGE_BASE_URL} # https://backstage.aws.neoris.cloud
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  database:
    client: pg
    connection:
      host: ${POSTGRES_HOST}
      port: ${POSTGRES_PORT}
      user: ${POSTGRES_USER}
      password: ${POSTGRES_PASSWORD}
# ====================================================================================
#  Backstage authentication configuration
# ====================================================================================
auth:
  environment: development
  session:
    secret: ${SESSION_SECRET}
  providers:
    dex:
      development:
        metadataUrl: ${URL_DEX}/.well-known/openid-configuration # https://dex.aws.neoris.cloud/.well-known/openid-configuration
        clientId: backstage
        clientSecret: ${SECRET_BACKSTAGE_OAUTH_CLIENT_SECRET}
# ====================================================================================
#  Backstage catalog configuration
# ====================================================================================
catalog:
  readonly: false
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, Resource, Location]
  locations:
    - type: github-discovery
      target: https://github.com/DDC-NEORIS
    - type: file
      target: ${CATALOG_NEORIS_CONTAINER_PATH} # Container path, check dockerfile
    - type: file
      target: /app/catalog-neoris/scaffolder-templates/remote-templates.yaml
      rules:
        - allow: [Template]
# ====================================================================================
#  Backstage proxy configuration
# ====================================================================================
proxy:
  '/grafana/api':
    target: ${URL_GRAFANA}
    headers:
      Authorization: Bearer ${GRAFANA_TOKEN_ACCESS}
  '/prometheus/api':
    target: ${URL_PROMETHEUS}
    secure: false
  '/bitbucketci':
    target: ${URL_BITBUCKETCI}
    headers:
      Authorization: Basic ${BITBUCKETCI_TOKEN_ACCESS}
# ====================================================================================
#  Backstage integrations configuration
# ====================================================================================
grafana:
  domain: ${URL_GRAFANA_DOMAIN}
tekton:
  - name: devsecops
    baseUrl: http://tekton-dashboard.tekton-pipelines.svc.cluster.local:9097
    # authorizationBearerToken: ${AWS_K8S_CADATA}
    dashboardBaseUrl: http://tekton-dashboard.aws.neoris.cloud/
    
kubernetes:
  serviceLocatorMethod:
    type: 'multiTenant'
  clusterLocatorMethods:
    - type: 'config'
      clusters:
        - url: ${AWS_K8S_URL}
          name: ${AWS_K8S_NAME}
          authProvider: 'serviceAccount'
          skipTLSVerify: true
          skipMetricsLookup: true
          # serviceAccountToken: ${SERVICE_ACCOUNT_TOKEN}
          caData: ${AWS_K8S_CADATA}

